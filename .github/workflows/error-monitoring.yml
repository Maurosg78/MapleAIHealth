name: Error Monitoring

on:
  schedule:
    - cron: '0 4 * * *'  # Runs at 4 AM UTC every day
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Get branch name
        id: branch
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Set up directory
        run: mkdir -p reports
      
      - name: Check TypeScript errors
        id: ts-check
        run: |
          # Run TypeScript check and capture output
          npm run type-check > reports/ts-check.log 2>&1 || true
          
          # Count errors
          ERROR_COUNT=$(grep -c "error TS" reports/ts-check.log || echo "0")
          echo "typescript=$ERROR_COUNT" >> $GITHUB_OUTPUT
          
          # Group errors by type for summary
          echo "### Error breakdown by type:" > reports/ts-summary.txt
          grep "error TS" reports/ts-check.log | sed 's/.*error TS\([0-9]*\).*/TS\1/' | sort | uniq -c | sort -nr >> reports/ts-summary.txt
          
          # List top 10 files with most errors
          echo "### Top files with errors:" >> reports/ts-summary.txt
          grep -o "src/.*\.tsx\?:[0-9]*:[0-9]*" reports/ts-check.log | cut -d':' -f1 | sort | uniq -c | sort -nr | head -10 >> reports/ts-summary.txt
      
      - name: Check ESLint errors
        id: eslint-check
        run: |
          # Run ESLint and capture output
          npm run lint -- --format json > reports/eslint.json 2>reports/eslint-stderr.log || true
          
          # Count errors
          if [ -s reports/eslint.json ]; then
            ERROR_COUNT=$(cat reports/eslint.json | grep -o '"severity":2' | wc -l)
            echo "eslint=$ERROR_COUNT" >> $GITHUB_OUTPUT
          else
            echo "eslint=0" >> $GITHUB_OUTPUT
          fi
      
      - name: Generate summary report
        run: |
          echo "# Error Monitoring Report" > reports/summary.md
          echo "Date: ${{ steps.date.outputs.date }}" >> reports/summary.md
          echo "Branch: ${{ steps.branch.outputs.branch }}" >> reports/summary.md
          echo "" >> reports/summary.md
          
          echo "## Error Counts" >> reports/summary.md
          echo "- TypeScript Errors: ${{ steps.ts-check.outputs.typescript }}" >> reports/summary.md
          echo "- ESLint Errors: ${{ steps.eslint-check.outputs.eslint }}" >> reports/summary.md
          echo "- Total Errors: $((${{ steps.ts-check.outputs.typescript }} + ${{ steps.eslint-check.outputs.eslint }}))" >> reports/summary.md
          echo "" >> reports/summary.md
          
          if [ -s reports/ts-summary.txt ]; then
            echo "## TypeScript Error Details" >> reports/summary.md
            cat reports/ts-summary.txt >> reports/summary.md
            echo "" >> reports/summary.md
          fi
      
      - name: Post report to GitHub Security tab
        if: ${{ steps.ts-check.outputs.typescript > 0 || steps.eslint-check.outputs.eslint > 0 }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: reports/errors.sarif
          category: typescript
