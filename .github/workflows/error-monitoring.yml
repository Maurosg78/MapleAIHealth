name: Error Monitoring

on:
  schedule:
    - cron: '0 0 * * 1'  # Ejecutar cada lunes a medianoche
  workflow_dispatch:

jobs:
  error-monitoring:
    name: Monitor TypeScript Errors
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get previous error count
        id: prev-count
        run: |
          if [ -f .error-count ]; then
            echo "previous=$(cat .error-count)" >> $GITHUB_OUTPUT
          else
            echo "previous=0" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check TypeScript errors
        id: ts-check
        run: |
          # Ejecutar verificación de tipos y guardar salida
          npm run type-check > ts-output.log 2>&1 || true

          # Contar errores totales
          TOTAL_ERRORS=$(grep -c "error TS" ts-output.log || echo "0")
          echo "Total TypeScript errors: $TOTAL_ERRORS"

          # Contar errores críticos (errores de sintaxis)
          CRITICAL_ERRORS=$(grep -c "error TS1" ts-output.log || echo "0")
          echo "Critical TypeScript errors: $CRITICAL_ERRORS"

          # Contar errores por archivo
          echo "Errors by file:" > error-report.txt
          grep "error TS" ts-output.log | sed 's/\(.*\)(\([0-9]*\),\([0-9]*\)):.*/\1/' | sort | uniq -c | sort -nr >> error-report.txt

          # Errores más comunes
          echo "Most common errors:" >> error-report.txt
          grep "error TS" ts-output.log | sed 's/.*: \(.*\)$/\1/' | sort | uniq -c | sort -nr | head -10 >> error-report.txt

          # Guardar para futuras comparaciones
          echo "$TOTAL_ERRORS" > .error-count

          # Output para el workflow
          echo "total=$TOTAL_ERRORS" >> $GITHUB_OUTPUT
          echo "critical=$CRITICAL_ERRORS" >> $GITHUB_OUTPUT
          echo "previous=${{ steps.prev-count.outputs.previous }}" >> $GITHUB_OUTPUT

      - name: Create SARIF file
        run: |
          cat > typescript-error-report.sarif << EOF
          {
            "\$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
            "version": "2.1.0",
            "runs": [
              {
                "tool": {
                  "driver": {
                    "name": "TypeScript Error Monitor",
                    "informationUri": "https://github.com/your-repo/your-app",
                    "rules": []
                  }
                },
                "results": []
              }
            ]
          }
          EOF

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: typescript-error-report.sarif

      - name: Compare with previous count
        run: |
          PREV=${{ steps.ts-check.outputs.previous }}
          CURRENT=${{ steps.ts-check.outputs.total }}

          if [ $CURRENT -gt $PREV ]; then
            DIFF=$((CURRENT - PREV))
            echo "::warning::⚠️ TypeScript errors increased by $DIFF (from $PREV to $CURRENT)"
          elif [ $CURRENT -lt $PREV ]; then
            DIFF=$((PREV - CURRENT))
            echo "::notice::✅ TypeScript errors decreased by $DIFF (from $PREV to $CURRENT)"
          else
            echo "TypeScript error count remains unchanged at $CURRENT"
          fi
