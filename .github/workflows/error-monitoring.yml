name: Error Monitoring

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]
  # Permite ejecutar el workflow manualmente desde la interfaz de GitHub
  workflow_dispatch:

jobs:
  lint-and-typescript:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checkout target branch (for reference comparisons)
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}
          else
            git fetch origin develop:develop || git fetch origin main:main || true
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint on current branch
        run: npx eslint src/ --format json > eslint-report-current.json || true

      - name: Run TypeScript check on current branch
        run: npx tsc --noEmit --pretty false > ts-errors-current.txt || true

      - name: Run ESLint on reference branch (for comparison)
        run: |
          REFERENCE_BRANCH=""
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            REFERENCE_BRANCH="${{ github.base_ref }}"
          elif git rev-parse --verify develop >/dev/null 2>&1; then
            REFERENCE_BRANCH="develop"
          elif git rev-parse --verify main >/dev/null 2>&1; then
            REFERENCE_BRANCH="main"
          fi

          if [[ ! -z "$REFERENCE_BRANCH" ]]; then
            echo "Comparando con rama de referencia: $REFERENCE_BRANCH"
            git checkout $REFERENCE_BRANCH
            npx eslint src/ --format json > eslint-report-reference.json || true
            npx tsc --noEmit --pretty false > ts-errors-reference.txt || true
            git checkout -
          else
            echo "No se pudo determinar una rama de referencia para comparaci√≥n"
            touch eslint-report-reference.json
            touch ts-errors-reference.txt
          fi

      - name: Generate error report
        run: |
          # Crear directorio para reportes
          mkdir -p reports

          # Generar reporte de ESLint actual
          CRITICAL_CURRENT=$(grep -c '"severity":2' eslint-report-current.json || echo 0)
          # Generar reporte de ESLint referencia
          CRITICAL_REFERENCE=$(grep -c '"severity":2' eslint-report-reference.json || echo 0)

          # Contar errores TypeScript
          TS_ERRORS_CURRENT=$(grep -c "error TS" ts-errors-current.txt || echo 0)
          TS_ERRORS_REFERENCE=$(grep -c "error TS" ts-errors-reference.txt || echo 0)

          # Calcular diferencias
          ESLINT_DIFF=$((CRITICAL_CURRENT - CRITICAL_REFERENCE))
          TS_DIFF=$((TS_ERRORS_CURRENT - TS_ERRORS_REFERENCE))
          TOTAL_DIFF=$((ESLINT_DIFF + TS_DIFF))

          # Generar reporte resumido
          echo "# üìä Reporte de Supervisi√≥n de Errores" > error-summary.md
          echo "" >> error-summary.md
          echo "Fecha: $(date)" >> error-summary.md
          echo "Rama: ${{ github.ref }}" >> error-summary.md
          echo "" >> error-summary.md

          echo "## Resumen" >> error-summary.md
          echo "" >> error-summary.md
          echo "| Categor√≠a | Actuales | Referencia | Diferencia | Prioridad |" >> error-summary.md
          echo "|-----------|----------|------------|------------|-----------|" >> error-summary.md
          echo "| ESLint Errores | $CRITICAL_CURRENT | $CRITICAL_REFERENCE | $ESLINT_DIFF | üî¥ Cr√≠tico |" >> error-summary.md
          echo "| TypeScript Errores | $TS_ERRORS_CURRENT | $TS_ERRORS_REFERENCE | $TS_DIFF | üî¥ Cr√≠tico |" >> error-summary.md
          echo "| **Total** | $((CRITICAL_CURRENT + TS_ERRORS_CURRENT)) | $((CRITICAL_REFERENCE + TS_ERRORS_REFERENCE)) | $TOTAL_DIFF | |" >> error-summary.md

          # Evaluar estado general
          TOTAL_CRITICAL=$((CRITICAL_CURRENT + TS_ERRORS_CURRENT))
          echo "TOTAL_CRITICAL=$TOTAL_CRITICAL" >> $GITHUB_ENV
          echo "TOTAL_DIFF=$TOTAL_DIFF" >> $GITHUB_ENV

          echo "" >> error-summary.md
          if [ "$TOTAL_DIFF" -gt 10 ]; then
            echo "## ‚ùå Estado: Cr√≠tico" >> error-summary.md
            echo "Has a√±adido $TOTAL_DIFF nuevos errores cr√≠ticos que deben ser corregidos inmediatamente." >> error-summary.md
            echo "ESTADO=CRITICO" >> $GITHUB_ENV
          elif [ "$TOTAL_DIFF" -gt 0 ]; then
            echo "## ‚ö†Ô∏è Estado: Atenci√≥n Necesaria" >> error-summary.md
            echo "Has a√±adido $TOTAL_DIFF nuevos errores cr√≠ticos que deben ser atendidos." >> error-summary.md
            echo "ESTADO=ATENCION" >> $GITHUB_ENV
          elif [ "$TOTAL_DIFF" -lt 0 ]; then
            echo "## ‚úÖ Estado: Mejora" >> error-summary.md
            echo "¬°Enhorabuena! Has reducido el n√∫mero de errores cr√≠ticos en $((TOTAL_DIFF * -1))." >> error-summary.md
            echo "ESTADO=MEJORA" >> $GITHUB_ENV
          else
            echo "## üü° Estado: Sin Cambios" >> error-summary.md
            echo "No has introducido nuevos errores cr√≠ticos, pero tampoco has reducido los existentes." >> error-summary.md
            echo "ESTADO=SINCAMBIOS" >> $GITHUB_ENV
          fi

          # Copiar los archivos de reporte
          cp eslint-report-current.json reports/eslint-report.json
          cp ts-errors-current.txt reports/typescript-errors.txt
          cp error-summary.md reports/

          # Mostrar resumen en la consola
          echo "=======================================";
          echo "          RESUMEN DE ERRORES            ";
          echo "=======================================";
          echo "ESLint Errores Cr√≠ticos: $CRITICAL_CURRENT (Diferencia: $ESLINT_DIFF)";
          echo "TypeScript Errores: $TS_ERRORS_CURRENT (Diferencia: $TS_DIFF)";
          echo "Total Errores Cr√≠ticos: $TOTAL_CRITICAL (Diferencia: $TOTAL_DIFF)";
          echo "=======================================";

      - name: Determinar si el workflow debe fallar
        run: |
          if [ "$ESTADO" = "CRITICO" ]; then
            echo "‚ùå El workflow falla porque has introducido muchos errores nuevos ($TOTAL_DIFF)."
            exit 1
          elif [ "$ESTADO" = "ATENCION" ]; then
            echo "‚ö†Ô∏è El workflow contin√∫a con advertencia por nuevos errores ($TOTAL_DIFF)."
          else
            echo "‚úÖ El workflow contin√∫a normalmente. Estado: $ESTADO"
          fi

      - name: Create PR comment with error summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('error-summary.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üîç Error Monitoring Report\n\n${summary}`
            });
